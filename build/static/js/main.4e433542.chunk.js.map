{"version":3,"sources":["components/Pizza.js","components/Notification.js","services/pizzat.js","services/login.js","App.js","index.js"],"names":["CustomTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","Pizza","_ref","pizza","react_default","a","createElement","TableRow_default","Pizza_CustomTableCell","component","scope","content","Notification","message","className","pizzat","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","services_login","login","Object","asyncToGenerator","regenerator_default","mark","_callee","credentials","wrap","_context","prev","next","sent","abrupt","stop","this","_x","apply","arguments","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addPizza","event","preventDefault","pizzaObject","state","newPizza","date","Date","pizzaService","setState","toggleImportanceOf","find","n","changedPizza","objectSpread","map","catch","error","filter","setTimeout","handlePizzaChange","target","value","console","log","username","password","handlePasswordChange","handleUsernameChange","user","loginService","t0","_this2","_this3","pizzatToShow","components_Notification","onSubmit","type","onChange","name","Paper_default","Table_default","TableHead_default","components_Pizza","key","toggleImportance","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4e433542.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\n//komponentti\r\n//material ui\r\nconst CustomTableCell = withStyles(theme => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n \r\n\r\nconst Pizza = ({ pizza }) => {\r\n    return(\r\n        <TableRow>\r\n        <CustomTableCell component=\"th\" scope=\"row\">\r\n          {pizza.content}\r\n        </CustomTableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default Pizza","import React from 'react'\r\n//virheviesti\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\n//front+backend\r\nconst baseUrl = '/api/pizzat'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  //front+back\r\n  return request.then(response => response.data)\r\n  }\r\n\r\n//luonti\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n//päivitys\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n//login metodi\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { Component } from 'react';\nimport Pizza from './components/Pizza'\nimport Notification from './components/Notification'\nimport pizzaService from './services/pizzat'\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport pizzat from './services/pizzat';\nimport loginService from './services/login'\n//import axios from 'axios'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      pizzat: [],\n      newPizza: '',\n      error: null,\n      username: '',\n      password: '',\n      user: null\n    }\n  }\n\n//tapahtumakäsittelijä\n  addPizza = (event) => {\n    event.preventDefault()\n    const pizzaObject = {\n      content: this.state.newPizza,\n      date: new Date(),\n    }\n//luonti\n    pizzaService\n    .create(pizzaObject)\n    .then(newPizza => {\n      this.setState({\n        pizzat: this.state.pizzat.concat(newPizza),\n        newPizza: ''\n      })\n    })\n}\n//tapahtumakäsittelijä\ntoggleImportanceOf = (id) => {\n  return () => {\n    const pizza = this.state.pizzat.find(n => n.id === id)\n    const changedPizza = { ...pizza}\n//päivitys\n    pizzaService\n      .update(id, changedPizza)\n      .then(changedPizza => {\n        this.setState({\n          pizzat: this.state.pizzat.map(pizza => pizza.id !== id ? pizza : changedPizza)\n        })\n      })\n      //virheenkäsittelijä\n      .catch(error => {\n        this.setState({\n          error: `pizza '${pizza.content}' on jo valitettavasti poistettu palvelimelta`,\n          pizzat: this.state.pizzat.filter(n => n.id !== id)\n        })\n        setTimeout(() => {\n          this.setState({ error: null })\n        }, 50000)\n      })\n  }\n}\n\n//datan haku palvelimelta\ncomponentWillMount() {\n  pizzaService\n    .getAll()\n    .then(pizzat => {\n      this.setState({ pizzat })\n    })\n}\n\n//muutoksenkäsittelijä\nhandlePizzaChange = (event) => {\n  this.setState({ newPizza: event.target.value })\n}\n//sisäänkirjautuminen\nlogin = (event) => {\n  event.preventDefault()\n  console.log('Kirjautunut sisään tunnukselle', this.state.username, this.state.password)\n}\n\n//muutoksenkäsittelijä\nhandlePasswordChange = (event) => {\n  this.setState({ password: event.target.value })\n}\n//muutoksenkäsittelijä\nhandleUsernameChange = (event) => {\n  this.setState({ username: event.target.value })\n}\n//metodin toteutus\nlogin = async (event) => {\n  event.preventDefault()\n  try {\n    const user = await loginService.login({\n      username: this.state.username,\n      password: this.state.password\n    })\n\n    this.setState({ username: '', password: '', user })\n  } catch (exception) {\n    this.setState({\n      error: 'Kirjautuminen epäonnistui',\n    })\n    //Selaimen latauksen aikarajoitus\n    setTimeout(() => {\n      this.setState({ error: null })\n    }, 5000)\n  }\n}\n\n  render() {\n    const pizzatToShow = this.state.pizzat \n    const CustomTableCell = withStyles(theme => ({\n      head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n      },\n      body: {\n        fontSize: 14,\n      },\n    }))(TableCell);\n    \n    const styles = theme => ({\n      root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n      },\n      table: {\n        minWidth: 700,\n      },\n      row: {\n        '&:nth-of-type(odd)': {\n          backgroundColor: theme.palette.background.default,\n        },\n      },\n    });\n\n    const loginForm = () => (\n      <div>\n        <h2>Kirjaudu</h2>\n\n        <form onSubmit={this.login}>\n          <div>\n            Käyttäjätunnus:\n            <input\n              type=\"text\"\n              //name=\"username\"\n              value={this.state.username}\n              onChange={this.handleUsernameChange}\n            />\n          </div>\n          <div>\n            Salasana:\n            <input\n              type=\"password\"\n              //name=\"password\"\n              value={this.state.password}\n              onChange={this.handlePasswordChange}\n            />\n          </div>\n          <button>Kirjaudu sisään</button>\n        </form>\n      </div>\n    )\n    const pizzaForm = () => (\n      <div>\n        <h2>Luo uusi Pizza</h2>\n\n        <form onSubmit={this.addPizza}>\n          <input\n            value={this.state.newPizza}\n            onChange={this.handlePizzaChange}\n          />\n          <button>Tallenna</button>\n        </form>\n      </div>\n    )\n\n    \n    return (\n      <div>\n        <h1>Pizzeria</h1>\n        <Notification message={this.state.error} />\n        {this.state.user === null ?\n          loginForm() :\n          <div>\n            <p>Tervetuloa {this.state.user.name}</p>\n            {pizzaForm()}\n          </div>\n        }\n\n       <Paper>\n         <Table>\n          <TableHead>\n            <TableRow>\n              <CustomTableCell>Pizzat</CustomTableCell>\n            </TableRow>\n          </TableHead>\n          <ul>\n            {pizzatToShow.map(pizza => <Pizza \n            key={pizza.id} \n            pizza={pizza} \n            toggleImportance={this.toggleImportanceOf(pizza.id)}/>)}\n          </ul>\n          </Table>\n        </Paper>\n\n        <form onSubmit={this.addPizza}>\n          <input \n            value={this.state.newPizza} \n            onChange={this.handlePizzaChange}\n          />\n          <button type=\"submit\">Tallenna</button>\n        </form>\n       \n      </div>\n      \n     \n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nconsole.log('hello world')\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}